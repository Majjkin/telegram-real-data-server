#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —Ç–æ–∫–µ–Ω
"""
import requests
import json
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_telegram_api_with_token():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram API —Å —Ç–æ–∫–µ–Ω–æ–º"""
    
    # –í–∞—à —Ç–æ–∫–µ–Ω
    token = "2i92Ks59Z5ILIhG5BLDmRS0nWAXGacsSreHvRnKEnS5rHTe6qdcksAnjnGA4Eek6ZQvHNYLL9CBUI"
    
    # –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è Telegram API
    base_url = f"https://api.telegram.org/bot{token}"
    
    try:
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        print("üîç Testing bot info...")
        response = requests.get(f"{base_url}/getMe")
        
        if response.status_code == 200:
            bot_info = response.json()
            print(f"‚úÖ Bot connected successfully!")
            print(f"   Bot name: {bot_info['result']['first_name']}")
            print(f"   Username: @{bot_info['result']['username']}")
            print(f"   ID: {bot_info['result']['id']}")
        else:
            print(f"‚ùå Bot API failed: {response.status_code}")
            print(f"   Response: {response.text}")
            return False
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        print(f"\nüîç Testing updates...")
        response = requests.get(f"{base_url}/getUpdates")
        
        if response.status_code == 200:
            updates = response.json()
            print(f"‚úÖ Updates retrieved: {len(updates['result'])} updates")
        else:
            print(f"‚ùå Updates failed: {response.status_code}")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª—ã —á–µ—Ä–µ–∑ Bot API
        print(f"\nüîç Testing channel search...")
        
        # –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_channels = [
            "rogov24",
            "burimovasasha", 
            "zarina_brand",
            "goldapple_ru",
            "glamguruu"
        ]
        
        working_channels = []
        
        for channel in test_channels:
            try:
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
                response = requests.get(f"{base_url}/getChat", params={"chat_id": f"@{channel}"})
                
                if response.status_code == 200:
                    chat_info = response.json()
                    if chat_info['ok']:
                        print(f"‚úÖ {channel}: {chat_info['result']['title']}")
                        working_channels.append(channel)
                    else:
                        print(f"‚ùå {channel}: {chat_info['description']}")
                else:
                    print(f"‚ùå {channel}: HTTP {response.status_code}")
                    
            except Exception as e:
                print(f"‚ùå {channel}: {e}")
        
        print(f"\nüìä SUMMARY:")
        print(f"‚úÖ Working channels: {len(working_channels)}")
        
        if working_channels:
            print(f"\nüéØ WORKING CHANNELS:")
            for ch in working_channels:
                print(f"  - {ch}")
        else:
            print(f"\n‚ùå No working channels found")
            print(f"\nüí° POSSIBLE SOLUTIONS:")
            print(f"1. –¢–æ–∫–µ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è Bot API")
            print(f"2. –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª–∞–º")
            print(f"3. –ü–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥")
        
        return len(working_channels) > 0
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

if __name__ == "__main__":
    test_telegram_api_with_token()
